@using XY.Supplier.Web
@model XY.Supplier.Web.Models.Purchase.PurchaseOrder_Model

@{
    Layout = "~/Views/Shared/Normal.cshtml";
}

<script type="text/javascript">
    //<![CDATA[

    function step(purchaseID) {
        require(['xy', 'boss'], function (xy, boss) {
            boss.load('/purchase/order_detail?purchaseID=' + purchaseID + '&backurl=' + xy.url(true));
        });
    }

    require(['jquery', 'xy', 'boss', 'laydate'], function ($, xy, boss, laydate) {
        $(function () {
            //初始化日期样式
            //var dBegin = '@(DateTime.Now.AddMonths(-1).ToString("yyyy-MM-dd HH:mm:ss"))'
            //var dEnd = '@(DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))'

            //初始化日期样式
            var dBegin = '@DateTime.Parse(Model.Begin).ToString("yyyy.MM.dd 00:00:00")'
            var dEnd =  '@DateTime.Parse(Model.End).ToString("yyyy.MM.dd 23:59:59")'

            //初始化日期样式
            laydate.render({
                elem: '#Begin',
                theme: boss.configPrimaryColor,
                type: 'datetime',
                value: dBegin,
                format: 'yyyy.MM.dd HH:mm:ss'
            });
            laydate.render({
                elem: '#End',
                theme: boss.configPrimaryColor,
                type: 'datetime',
                value: dEnd,
                format: 'yyyy.MM.dd HH:mm:ss'
            });
            boss.tableInit($('#tablePur'));

            //点击查询
            $('#Search').on('click', function () {
                boss.load("/purchase/order?orderStatus=" + $("#OrderStatus").val() + "&isDelayStatus=" + $("#IsDelayStatus").val() + "&orderKey=" + $("#OrderKey").val()
                    + "&begin=" + xy.urlencode($("#Begin").val()) + "&end=" + xy.urlencode($("#End").val()) + "&pagesize=" + $("#Pagesize").val());
            });
            //点击导出
            $('#Export').on("click", function () {
                var idArray = boss.tableSelectValue($('#tablePur'));
                if (idArray == null || idArray.length <= 0) {
                    alert('请至少选择一条记录！');
                    return false;
                }
                $("#Export").attr("disabled", true);
                postDownloadFile({ purchaseID: xy.jsonstr(idArray) }, "/purchase/order_export");
                $("#Export").attr("disabled", false);
            });
            //下载文件
            function postDownloadFile(params, url) {
                //params是post请求需要的参数，url是请求url地址
                var form = document.createElement("form");
                form.style.display = "none";
                form.action = url;
                form.method = "post";
                document.body.appendChild(form);
                //动态创建input并给value赋值
                for (var key in params) {
                    var input = document.createElement("input");
                    input.type = "hidden";
                    input.name = key;
                    input.value = params[key];
                    form.appendChild(input);
                }
                form.submit();
                form.remove();
            }
            //点击投屏
            $('#Shot').on('click', function () {
                window.location.href = "/purchase/order_shot?orderStatus=" + $("#OrderStatus").val() + "&purchaseOrderKey=" + $("#PurchaseOrderKey").val() + "&isDelayStatus="
                    + $("#IsDelayStatus").val() + "&begin=" + xy.urlencode($("#Begin").val()) + "&end=" + xy.urlencode($("#End").val());

            });
            //点击打印条码
            $('#Print').on('click', function () {
                var idArray = boss.tableSelectValue($('#tablePur'));
                if (idArray != null && idArray.length == 1) {
                    window.location.href = "/purchase/order_print_detail?purchaseID=" + idArray[0] + '&backurl=' + xy.url(true);
                }
                else {
                    alert('请选择一条记录！');
                    return false;
                }
            });
            //在父页面添加监听器,接收子页面的值：
            window.addEventListener('message', function (e) {

                alert(e.data);

            }, false);
        });
    });

    //]]>
</script>

<div class="container-fluid">
    <div class="boss_table_top">
        <div class="fl mb10">
            <label class="mr3">状态</label>
            @Html.DropDownList("OrderStatus", Model.OrderStatusList, new
            {
                @class = "form-control form-control-sm mr5",
                style = "width:auto;min-width:100px;"

            })
        </div>
        <div class="fl mb10">
            <label class="mr3">延期</label>
            <select class="form-control form-control-sm mr5" data-val="true" data-val-required="The IsDelayStatus field is required." id="IsDelayStatus" name="IsDelayStatus" style="width:auto;min-width:100px;">
                <option value="-1" @(Model.IsDelayStatus == -1 ? "selected='selected'" : "")>全部</option>
                <option value="1" @(Model.IsDelayStatus == 1 ? "selected='selected'" : "")>是</option>
                <option value="0" @(Model.IsDelayStatus == 0 ? "selected='selected'" : "")>否</option>
            </select>
        </div>
        <div class="fl mb10">
            <label for="Begin" class="mr3">下单时间</label>
            <input id="Begin" value="@(Model.Begin)" type="text" maxlength="19" autocomplete="off" class="form-control cp mr3" style="width:160px;" />
        </div>
        <div class="fl mb10">
            <label for="End" class="mr3">至</label>
            <input id="End" value="@(Model.End)" type="text" maxlength="19" autocomplete="off" class="form-control cp mr5" style="width:160px;" />
        </div>
        <div class="fl mb10">
            <label class="mr3" for="OrderKey">订单号</label>
            <input type="text" id="OrderKey" value="@(Model.OrderKey)" maxlength="64" class="form-control mr5" style="width:200px;" placeholder="订单号" />
        </div>
        <div class="fl mb10">
            <button id="Search" type="button" class="btn btn-sm btn-primary">
                <i class="fa fa-search" aria-hidden="true"></i>
                <span>查询</span>
            </button>
        </div>
        <div class="fr mr10">
            <button id="Export" type="button" class="btn btn-sm btn-warning mb10">
                <i class="fas fa-download" aria-hidden="true"></i>
                <span>导出</span>
            </button>
        </div>
        <div class="fr mr10">
            <button id="Print" type="button" class="btn btn-sm btn-warning mb10">
                <i class="fa fa-print" aria-hidden="true"></i>
                <span>打印条码</span>
            </button>
        </div>
        <div class="fr mr10">
            <button id="Shot" type="button" class="btn btn-sm btn-warning mb10" style="display:none;">
                <i class="fa " aria-hidden="true"></i>
                <span>投屏模式</span>
            </button>
        </div>
    </div>
    <div class="boss_table_body table-responsive">
        <table id="tablePur" class="table table-bordered table-hover" style="width: 36rem">
            <thead>
                <tr>
                    <th><input id="SelectAll" type="checkbox" /></th>
                    <th class="w3p">#</th>
                    <th class="w20p">订单号</th>
                    <th class="w27p">下单时间</th>
                    <th class="w27p">要求交货时间</th>
                    <th class="w10p">延期</th>
                    <th class="w16p">状态</th>
                </tr>
            </thead>
            <tbody>
                @if (Model.OrderList != null && Model.OrderList.Count() > 0)
                {
                    var i = 0;
                    var pages = Convert.ToInt32(XY.Http.QueryString(Context.Request, "page", "1"));
                    var pagesize = Convert.ToInt32(XY.Http.QueryString(Context.Request, "pagesize", "30"));

                    foreach (var dr in Model.OrderList)
                    {
                        i++;
                <tr>
                    <td><input type="checkbox" value="@(dr["purchase_id"].ToString())" /></td>
                    <td>@(((pages - 1) * pagesize + i).ToString())</td>
                    <td><img class="detail-icon" onclick="step(@(int.Parse(dr["purchase_id"].ToString())));" src="/images/arrow-right-y.png" /><span>@(dr["purchase_order"].ToString())</span></td>
                    <td>@(dr["issue_time"].ToString()==""?"": DateTime.Parse(dr["issue_time"].ToString()).ToString("yyyy.MM.dd HH:mm:ss"))</td>
                    <td>@(dr["delivery_time"].ToString()==""?"": DateTime.Parse(dr["delivery_time"].ToString()).ToString("yyyy.MM.dd"))</td>
                    <td>@(dr["is_delay"].ToString() == "0" ? "否":"是")</td>
                    <td>@(XY.Enums.boss.Tools.purchase_status((XY.Enums.boss.purchase_status)dr["status"]))</td>
                </tr>
                    }
                }
            </tbody>
        </table>
    </div>

    @Html.Pager(XY.Http.RequestUrl(Context.Request), Model.OrderList)
</div>