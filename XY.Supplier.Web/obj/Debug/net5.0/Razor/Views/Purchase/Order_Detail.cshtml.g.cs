#pragma checksum "D:\GIT.NEWARE.WORK\neware-mes\Sources\XY.Supplier.Web\Views\Purchase\Order_Detail.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "5701eb300d53557917f97b2dec934c5fbcf99c2d"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Purchase_Order_Detail), @"mvc.1.0.view", @"/Views/Purchase/Order_Detail.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\GIT.NEWARE.WORK\neware-mes\Sources\XY.Supplier.Web\Views\Purchase\Order_Detail.cshtml"
using System.Data;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"5701eb300d53557917f97b2dec934c5fbcf99c2d", @"/Views/Purchase/Order_Detail.cshtml")]
    public class Views_Purchase_Order_Detail : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<XY.Supplier.Web.Models.Purchase.PurchaseOrder_View_Model>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 4 "D:\GIT.NEWARE.WORK\neware-mes\Sources\XY.Supplier.Web\Views\Purchase\Order_Detail.cshtml"
  
    Layout = "~/Views/Shared/Normal.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<style>
    .table_fixed {
        table-layout: fixed;
        word-break: break-all
    }

    #dialogProduceItemPrint .fixed-height {
        height: 250px !important;
    }

    #dialogProduceItemPrint .fixed-table-border {
        display: none;
    }

    .card {
        min-width: 1300px;
    }

    #dialogBindSerialNumber {
        margin-left: 50%;
        transform: translateX(-50%);
        width: 32rem;
    }
    td[contenteditable]:empty:not(:focus):before {
        content: '双击输入序列号';
        color: #e9e9e9;
        font-size: .75rem;
    }
    td[contenteditable]:focus {
        outline: none;
        background-color: #fff;
    }

    td:empty:before {
        content: '双击输入序列号';
        color: #e9e9e9;
        font-size: .75rem;
    }
</style>

<script type=""text/javascript"">
    //<![CDATA[

    //function submitFile() {
    //    console.log(123)
    //    require(['xy', 'boss', 'jquery'], function (xy, boss, $) {
    //        var _form = $('");
            WriteLiteral(@"form:first');
    //        _form.xyvInit();
    //        console.log(1234)
    //        boss.submit(_form);
    //    });

    //}


    require(['jquery', 'xy', 'xyvalid', 'boss', 'bootstrap', 'layer', 'bootstrapTable', 'bootstrapTableLocale','bootstrapTableEditor'],
        function ($, xy, v, boss, bootstrap, layer, bootstrapTable, bt,bootstrapTableEditor) {
        $(function () {
            boss.tableInit($('#tableOrderItem'));

            //var _form = $(""#formFile"");
            //_form.xyvInit();

            //点击返回
            $('#Cancel').on('click', function () {
                boss.load('");
#nullable restore
#line 73 "D:\GIT.NEWARE.WORK\neware-mes\Sources\XY.Supplier.Web\Views\Purchase\Order_Detail.cshtml"
                      Write(Html.Raw(Model.Backurl));

#line default
#line hidden
#nullable disable
            WriteLiteral("\');\r\n            });\r\n\r\n            var purchaseID =");
#nullable restore
#line 76 "D:\GIT.NEWARE.WORK\neware-mes\Sources\XY.Supplier.Web\Views\Purchase\Order_Detail.cshtml"
                       Write(Model.PurchaseID);

#line default
#line hidden
#nullable disable
            WriteLiteral(@";
            var itemID = 0;

            function saveData(index, field, tdValue) {
                //更新单元格
                $('#tablePrintInfo').bootstrapTable('updateCell', {
                    index: index,
                    field: field,
                    value: tdValue
                })
            }

            //保存序列号
            function saveDataSerialNumber(index, field, tdValue) {
                //更新单元格
                $('#tbSerialNumber').bootstrapTable('updateCell', {
                    index: index,
                    field: field,
                    value: tdValue
                })
            }

            // 判断字符串是否包含中文
            function hasChinese(str) {
                return /[\u4E00-\u9FA5]+/g.test(str)
            }

            //加载打印信息
            $('#dialogProduceItemPrint').on('show.bs.modal', function () {
                $('#tablePrintInfo').bootstrapTable('destroy');
                $('#tablePrintInfo').bootstrapTable({
              ");
            WriteLiteral(@"      url: ""/Purchase/Order_GetProduceOrderInfo"",
                    method: ""get"",
                    contentType: 'application/json',
                    pagination: true,                   //是否显示分页（*）
                    //pageNumber: pageNumber || 1,//初始化加载第一页，默认第一页
                    pageSize: 10,//每页的记录行数（*）
                    pageList: [10, 30, 50, 100, 500],//可供选择的每页的行数（*）
                    striped: true,//是否显示行间隔色
                    sidePagination: ""server"",
                    paginationPreText: ""<"",
                    paginationNextText: "">"",
                    paginationLoop: false,
                    height: 250,
                    idField: 'ProduceID',
                    //uniqueId: ""itemId"",
                    queryParams: function (params) {
                        return {
                            purchaseID: purchaseID,
                            limit: params.limit,
                            offset: params.offset
                        };
           ");
            WriteLiteral(@"         },
                    columns: [
                        {
                            checkbox: true,
                            width: 50
                        },
                        {
                            field: 'ProduceID',
                            visible: false,
                        },
                        {
                            field: '',
                            title: '#',
                            formatter: function (value, row, index) {
                                var pageSize = $('#tablePrintInfo').bootstrapTable('getOptions').pageSize;//通过表的#id 可以得到每页多少条
                                var pageNumber = $('#tablePrintInfo').bootstrapTable('getOptions').pageNumber;//通过表的#id 可以得到当前第几页
                                return pageSize * (pageNumber - 1) + index + 1;//返回每条的序号： 每页条数 * （当前页 - 1 ）+ 序号
                            },
                            width: 30
                        },
                        {
               ");
            WriteLiteral(@"             field: 'ProduceOrder',
                            title: '生产订单',
                            //width: 100
                        },
                        {
                            field: 'ItemCode',
                            title: '物料编码',
                            width: 170
                        },{
                            field: 'ItemQty',
                            title: '标签数量',
                            //width: 50
                        },
                        {
                            field: 'Copies',
                            title: '份数',
                            width: 80
                        },
                        {
                            field: 'Remarks',
                            title: '备注',
                            width: 200
                        },
                        {
                            field: 'ItemRule',
                            title: '规则',
                            //width: 50
 ");
            WriteLiteral(@"                       }
                    ],
                    responseHandler: function (res) {
                        var data = JSON.parse(res)
                        var objtmp = {
                            ""rows"": JSON.parse(data.data),
                            ""total"": data.total//总个数
                        }
                        return objtmp;
                    },
                    onClickCell: function (field, value, row, $element) {
                        switch (field) {
                            case ""ItemQty"":
                                $element.attr('contenteditable', true);
                                $element.blur(function () {
                                    let index = $element.parent().data('index');
                                    let tdValue = $element.html();
                                    if (parseFloat(tdValue).toString() == ""NaN"" || parseFloat(tdValue).toString() == ""0"") {
                                        layer.msg(""");
            WriteLiteral(@"请输入大于0的数值！"");
                                        tdValue = value;
                                    }
                                    saveData(index, field, parseFloat(tdValue));
                                })
                                break;
                            case ""Copies"":
                                $element.attr('contenteditable', true);
                                $element.blur(function () {
                                    let index = $element.parent().data('index');
                                    let tdValue = $element.html();
                                    if (parseFloat(tdValue).toString() == ""NaN"" || parseFloat(tdValue).toString() == ""0"" || parseFloat(tdValue)>999) {
                                        layer.msg(""请输入大于0的小于999的数值！"");
                                        tdValue = value;
                                    }
                                    saveData(index, field, parseFloat(tdValue));
                       ");
            WriteLiteral(@"         })
                                break;
                            case ""Remarks"":
                                $element.attr('contenteditable', true);
                                $element.blur(function () {
                                    let index = $element.parent().data('index');
                                    let tdValue = $element.html();
                                    if (tdValue.length > 20) {
                                        layer.msg(""备注信息不能超过20个字符！"");
                                        tdValue = value;
                                    }
                                    saveData(index, field, tdValue);
                                })
                                break;
                            default:
                        }
                    },
                    // 行点击事件
                    onClickRow: function (row, $element) {
                    },
                    // 表格渲染完成事件
                    onPostBod");
            WriteLiteral(@"y() {
                    },
                    onLoadSuccess(data) {
                        //boss.tableInit($('#tableItem'));
                    }
                });
            })

            //生产打印
            $('#DialogPrint').on('click', function () {
                var printData = $(""#tablePrintInfo"").bootstrapTable('getSelections')
                if (printData.length == 0) {
                    layer.msg(""请选择要打印的订单信息！"");
                    return
                }
                $.ajax({
                    type: ""post"",
                    url: ""/Purchase/Order_Product_ItemPrint"",
                    data: { printData: JSON.stringify(printData)},
                    contentType: ""application/x-www-form-urlencoded"",
                    dataType: ""json"",
                    beforeSend: function () {
                        $(""#DialogPrint"").attr(""disabled"", true);
                    },
                    success: function (res) {
                        if (res != nu");
            WriteLiteral(@"ll) {
                            //调用打印
                            printJS({
                                printable: res,
                                type: 'image'//image pdf
                            });
                        } else {
                            layer.msg(""打印失败!"");
                        }
                        $(""#DialogPrint"").attr(""disabled"", false);
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        console.log(XMLHttpRequest);
                        console.log(textStatus);
                        console.log(errorThrown);
                        layer.msg(""打印失败!"");
                        $(""#DialogPrint"").attr(""disabled"", false);
                    }
                });
                //$(""#dialogProduceItemPrint"").modal(""hide"");
                //print(""Order_Product_ItemPrint"", receiptItem, webPrint, null);

            });

            var isAdd = true;
          ");
            WriteLiteral(@"  //显示绑定序列号弹框
            $(""#tableOrderItem"").on('click', '.cserialNumber', function () {
                itemID = $(this).attr(""data-itemId"")
                isAdd = true;
               // $('#dialogBindSerialNumber').modal({ show: true});
                showDialogBindSerialNumber();
            });

            //显示修改序列号弹框
            $(""#tableOrderItem"").on('click', '.serialNumber_Edit', function () {
                itemID = $(this).attr(""data-itemId"")
                isAdd = false;
                //$('#dialogBindSerialNumber').modal({ show: true });
                showDialogBindSerialNumber();
            });


            function showDialogBindSerialNumber() {

                $('#tbSerialNumber').bootstrapTable('destroy');
                $('#tbSerialNumber').bootstrapTable({
                    url: ""/Purchase/Order_OrderSerialNumberWaitBind"",
                    method: ""get"",
                    contentType: 'application/json',
                    pagination: false,    ");
            WriteLiteral(@"               //是否显示分页（*）
                    //pageNumber: pageNumber || 1,//初始化加载第一页，默认第一页
                    pageSize: 10,//每页的记录行数（*）
                    pageList: [10, 30, 50, 100, 500],//可供选择的每页的行数（*）
                    striped: true,//是否显示行间隔色
                    sidePagination: ""server"",
                    paginationPreText: ""<"",
                    paginationNextText: "">"",
                    paginationLoop: false,
                    height: 350,
                    width: 200,
                    idField: 'ProduceID',
                    //uniqueId: ""itemId"",
                    queryParams: function (params) {
                        return {
                            purchaseID: purchaseID,
                            limit: params.limit,
                            offset: params.offset,
                            itemID: itemID
                        };
                    },
                    columns: [
                        {
                            chec");
            WriteLiteral(@"kbox: true,
                            width: ""5px""
                        },
                        {
                            field: '',
                            title: '#',
                            width: ""3px"",
                            formatter: function (value, row, index) {
                                return index + 1;
                            }
                        },
                        {
                            field: 'serial_number',
                            title: '序列号'
                        }
                    ],
                    responseHandler: function (res) {
                        var data = JSON.parse(res)
                        if (data.Code == 1) {
                            layer.msg(data.Message);
                        }
                        var objtmp = {
                            ""rows"": data.Data,
                            ""total"": data.Data.length //总个数
                        }
                        r");
            WriteLiteral(@"eturn objtmp;
                    },
                    onClickCell: function (field, value, row, $element) {
                        switch (field) {
                            case ""serial_number"":
                                $element.attr('contenteditable', 'plaintext-only');
                                $element.blur(function () {
                                    let index = $element.parent().data('index');
                                    let tdValue = $element.html();
                                    console.log(tdValue)
                                    if (tdValue.length > 30) {
                                        layer.msg(""序列号长度不能超过30个字符！"");
                                        tdValue = value;
                                    }
                                    saveDataSerialNumber(index, field, tdValue);
                                })
                                break;
                            default:
                        }
        ");
            WriteLiteral(@"            },
                    // 行点击事件
                    onClickRow: function (row, $element) {
                    },
                    // 表格渲染完成事件
                    onPostBody() {
                    },
                    onLoadSuccess(data) {
                        //boss.tableInit($('#tableItem'));
                    }
                });

                $('#dialogBindSerialNumber').modal({ show: true });
            }

            //提交系列号绑定
            $(""#btnSubmit"").on('click', function () {

                var printData = $(""#tbSerialNumber"").bootstrapTable('getData')
                var serialNumbarArr ="""";
                for (var i = 0; i < printData.length; i++) {
                    var sn = printData[i].serial_number.replace(/&nbsp;/gi, '');
                    if (sn.length==0) {
                        //layer.msg(""请填写完整所有的序列号！"");
                        //return
                    } else {
                        //serialNumbarArr.push(printData[i].s");
            WriteLiteral(@"erial_number.replace(/&nbsp;/gi, ''));
                        //判断是否包含中文
                        if (hasChinese(sn)) {
                            layer.msg(""序列号中包含中文,请确认！"");
                            return
                        }

                        if (serialNumbarArr!="""") {
                            serialNumbarArr += "","" + sn;
                        } else {
                            serialNumbarArr = sn;
                        }
                    }
                }
                var postdata = {
                    purchaseID: purchaseID,
                    itemID: itemID,
                    serialNumbarArr: serialNumbarArr
                };
                var requestUrl = ""/Purchase/Order_SerialNumberBind"";
                //if (!isAdd) {
                //    requestUrl = ""/Purchase/Order_SerialNumberBindUpdate"";
                //}

                $.ajax({
                    type: ""post"",
                    url: requestUrl,
                    da");
            WriteLiteral(@"ta: postdata,
                    contentType: ""application/x-www-form-urlencoded"",
                    dataType: ""json"",
                    beforeSend: function () {
                        $(""#btnSubmit"").attr(""disabled"", true);
                    },
                    success: function (res) {
                        var data = JSON.parse(res)
                        if (data.Code==0) {
                            layer.msg(data.Message, { time: 2000 }, function () {
                                //$('#dialogBindSerialNumber').modal({ show: false });
                                $(""#dialogBindSerialNumber"").modal(""hide"");
                            });
                        } else {
                            layer.msg(data.Message);
                        }
                        $(""#btnSubmit"").attr(""disabled"", false);
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        layer.msg(""绑定序列号失败!"");
    ");
            WriteLiteral(@"                    $(""#btnSubmit"").attr(""disabled"", false);
                    }
                });
            })

            //var fileList = [] // 文件list

            $(""#uploadFile"").on('input', function (e) {
                var fileItem = $('#uploadFile')[0].files[0]
                var formData = new FormData();
                formData.append('file', fileItem)
                //formData.append('type', '1')
                formData.append('purchaseID', purchaseID)
                formData.append('itemID', itemID)

                $.ajax({
                    type: ""post"",
                    url: ""/Purchase/Order_SerialNumberImport"",
                    data: formData,
                    async: true,
                    cache: false,
                    contentType: false,
                    processData: false,
                    dataType: 'json',
                    success: function (res) {
                        var data = JSON.parse(res)
                        if ");
            WriteLiteral(@"(data.Code == 0) {
                            layer.msg(data.Message, { time: 2000 }, function () {
                                //$('#dialogBindSerialNumber').modal({ show: false });
                                $(""#dialogBindSerialNumber"").modal(""hide"");
                            });
                        } else {
                            layer.msg(data.Message);
                        }

                        $(""#uploadFile"").val("""");
                    }
                });
            });

            //打印外包装条码
            $(""#packageNoPrint"").on('click', function () {
                var idArray = boss.tableSelectValue($('#tableOrderItem'));
                if (idArray.length == 0) {
                    layer.msg(""请选择要打印的订单物料外包装信息！"");
                    return
                }
                if (idArray.length != 1) {
                    layer.msg(""一次只能选择一个物料进行外包装打印！"");
                    return
                }

                itemID = idArray[0]
     ");
            WriteLiteral(@"           //$('#dialogBindSerialNumber').modal({ show: true });
                ShowPrintSerialNumber(purchaseID, idArray[0]);
            })

            //显示已绑定待打印的序列号信息
            function ShowPrintSerialNumber(purchaseID, itemID) {
                $('#tbSerialNumberPrint').bootstrapTable('destroy');
                $('#tbSerialNumberPrint').bootstrapTable({
                    url: ""/Purchase/Order_OrderSerialNumberHasBind"",
                    method: ""get"",
                    contentType: 'application/json',
                    pagination: false,                   //是否显示分页（*）
                    //pageNumber: pageNumber || 1,      //初始化加载第一页，默认第一页
                    pageSize: 10,                      //每页的记录行数（*）
                    pageList: [10, 30, 50, 100, 500], //可供选择的每页的行数（*）
                    striped: true,                   //是否显示行间隔色
                    sidePagination: ""server"",
                    paginationPreText: ""<"",
                    paginationNextText: "">"",
   ");
            WriteLiteral(@"                 paginationLoop: false,
                    height: 350,
                    width: 70,
                    idField: 'serial_number',
                    //uniqueId: ""itemId"",
                    queryParams: function (params) {
                        return {
                            purchaseID: purchaseID,
                            limit: params.limit,
                            offset: params.offset,
                            itemID: itemID
                        };
                    },
                    columns: [
                        {
                            checkbox: true,
                            width: 5
                        },
                        {
                            field: '',
                            title: '#',
                            formatter: function (value, row, index) {
                                return index + 1;
                            },
                            width: 5
                  ");
            WriteLiteral(@"      },
                        {
                            field: 'serial_number',
                            title: '序列号',
                            width:30
                        },
                        {
                            field: 'packageNo',
                            title: '箱号',
                            width:30
                        }
                    ],
                    responseHandler: function (res) {
                        var data = JSON.parse(res)
                        if (data.Code == 1) {
                            layer.msg(data.Message);
                        }
                        var objtmp = {
                            ""rows"": data.Data,
                            ""total"": data.Data.length //总个数
                        }
                        if (data.Data.length>0) {
                            $('#dialogPackageNoPrint').modal({ show: true });
                        } else {
                            layer.msg(""请先录入");
            WriteLiteral(@"序列号！"");
                        }
                        return objtmp;
                    },
                    onClickCell: function (field, value, row, $element) {
                    },
                    // 行点击事件
                    onClickRow: function (row, $element) {
                    },
                    // 表格渲染完成事件
                    onPostBody() {
                    },
                    onLoadSuccess(data) {
                        //boss.tableInit($('#tableItem'));
                    }
                });
            }

            //打印外包装条码提交
            $(""#btnPackageNoPrint"").on('click', function () {
                var printData = $(""#tbSerialNumberPrint"").bootstrapTable('getSelections')
                if (printData.length == 0) {
                    layer.msg(""请选择要打印外包装的序列号！"");
                    return
                }
                var postdata = {
                    purchaseID: purchaseID,
                    itemID: itemID,
                ");
            WriteLiteral(@"    serialNumbarInfo: JSON.stringify(printData)
                };
                //加载层
                var msg = layer.msg('数据处理中', {
                    icon: 16,
                    shade: 0.01,
                    time: false
                });

                $.ajax({
                    type: ""post"",
                    url: ""/Purchase/Order_SerialNumberPrint"",
                    data: postdata,
                    dataType: ""json"",
                    beforeSend: function () {
                        $(""#btnPackageNoPrint"").attr(""disabled"", true);
                    },
                    success: function (res) {
                        layer.close(msg)
                        var data = JSON.parse(res)
                        if (data.Code == 0) {
                            $('#dialogPackageNoPrint').modal('hide')
                            var ss = JSON.parse(data.Message)
                            //图片打印
                            printJS({
                       ");
            WriteLiteral(@"         printable: ss,
                                type: 'image'//image pdf
                            });
                        }
                        else {
                            layer.msg(data.Message, { time: 3000 }, function () { });
                        }
                        $(""#btnPackageNoPrint"").attr(""disabled"", false);
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        layer.msg(""绑定序列号失败!"");
                        $(""#btnPackageNoPrint"").attr(""disabled"", false);
                    }
                });
            })
        });
       });
    //]]>

</script>

<div class=""modal fade"" id=""dialogProduceItemPrint"" tabindex=""-1"" role=""dialog"" aria-labelledby=""dialogTitle"" aria-hidden=""true"" data-backdrop=""static"">
    <div class=""modal-dialog modal-dialog-centered modal-lg"" role=""document"">
        <div class=""modal-content"">
            <div class=""modal-header"">
             ");
            WriteLiteral(@"   <span class=""modal-title"" id=""dialogTitle"">生产打印</span>
                <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""关闭"">
                    <span aria-hidden=""true"">&times;</span>
                </button>
            </div>
            <div class=""modal-body fz0875r"">
                <table id=""tablePrintInfo"" class=""table_fixed""></table>
            </div>
            <div class=""modal-footer justify-content-center"">
                <button type=""button"" class=""btn btn-secondary btn-sm w100"" data-dismiss=""modal"">取消</button>
                <button id=""DialogPrint"" type=""button"" class=""btn btn-warning btn-sm w100"">打印</button>
            </div>
        </div>
    </div>
</div>

<div class=""modal fade"" id=""dialogPackageNoPrint"" tabindex=""-1"" role=""dialog"" aria-labelledby=""dialogTitle"" aria-hidden=""true"" data-backdrop=""static"">
    <div class=""modal-dialog modal-dialog-centered modal-lg"" role=""document"">
        <div class=""modal-content"">
            <div class=""");
            WriteLiteral(@"modal-header"">
                <span class=""modal-title"" id=""dialogTitle"">序列号</span>
                <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""关闭"">
                    <span aria-hidden=""true"">&times;</span>
                </button>
            </div>
            <div class=""modal-body fz0875r"">
                <table id=""tbSerialNumberPrint"" class=""table_fixed""></table>
            </div>
            <div class=""modal-footer justify-content-center"">
");
            WriteLiteral("                <button id=\"btnPackageNoPrint\" type=\"button\" class=\"btn btn-warning btn-sm w100\">确定</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n");
            WriteLiteral("\r\n");
#nullable restore
#line 712 "D:\GIT.NEWARE.WORK\neware-mes\Sources\XY.Supplier.Web\Views\Purchase\Order_Detail.cshtml"
 using (Html.BeginForm())
{

#line default
#line hidden
#nullable disable
            WriteLiteral(@"    <div class=""container-fluid"">
        <div class=""fl w100p"">
            <button id=""Cancel"" type=""button"" class=""btn btn-sm btn-warning mb10 fr"">
                <i class=""fas fa-arrow-left"" aria-hidden=""true""></i>
                <span>返回</span>
            </button>

");
            WriteLiteral("\r\n        <button id=\"packageNoPrint\" type=\"button\" class=\"btn btn-sm btn-warning mb10 fr\" style=\"margin-right:15px\" data-toggle=\"modal\">\r\n");
            WriteLiteral(@"            <i class=""fa fa-print"" aria-hidden=""true""></i>
            <span>外包装标签</span>
        </button>

        </div>
        <div class=""card"">
            <div class=""card-header b"">采购订单详情</div>
            <div class=""card-body"">
                <div class=""row justify-content-center mt1r mb05r"">
                    <div class=""col-xl-1 col-lg-1 col-md-1 col-xs-1 col-sm-1 col-1 gray"">采购订单号</div>
                    <div class=""col-xl-4 col-lg-4 col-md-4 col-xs-4 col-sm-4 col-4"">");
#nullable restore
#line 738 "D:\GIT.NEWARE.WORK\neware-mes\Sources\XY.Supplier.Web\Views\Purchase\Order_Detail.cshtml"
                                                                                Write(Model.PurchaseOrder);

#line default
#line hidden
#nullable disable
            WriteLiteral("</div>\r\n                    <div class=\"col-xl-1 col-lg-1 col-md-1 col-xs-1 col-sm-1 col-1 gray\">状态</div>\r\n                    <div class=\"col-xl-4 col-lg-4 col-md-4 col-xs-4 col-sm-4 col-4\">\r\n                        ");
#nullable restore
#line 741 "D:\GIT.NEWARE.WORK\neware-mes\Sources\XY.Supplier.Web\Views\Purchase\Order_Detail.cshtml"
                    Write(XY.Enums.boss.Tools.purchase_status(Model.Status));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
                    </div>
                </div>
                <div class=""row justify-content-center mb05r"">
                    <div class=""col-xl-1 col-lg-1 col-md-1 col-xs-1 col-sm-1 col-1 gray"">供应商</div>
                    <div class=""col-xl-4 col-lg-4 col-md-4 col-xs-4 col-sm-4 col-4 oneLine""");
            BeginWriteAttribute("title", " title=\"", 32128, "\"", 32155, 1);
#nullable restore
#line 746 "D:\GIT.NEWARE.WORK\neware-mes\Sources\XY.Supplier.Web\Views\Purchase\Order_Detail.cshtml"
WriteAttributeValue("", 32136, Model.SupplierName, 32136, 19, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(">");
#nullable restore
#line 746 "D:\GIT.NEWARE.WORK\neware-mes\Sources\XY.Supplier.Web\Views\Purchase\Order_Detail.cshtml"
                                                                                                                   Write(Model.SupplierName);

#line default
#line hidden
#nullable disable
            WriteLiteral("</div>\r\n                    <div class=\"col-xl-1 col-lg-1 col-md-1 col-xs-1 col-sm-1 col-1 gray\">订单创建人</div>\r\n                    <div class=\"col-xl-4 col-lg-4 col-md-4 col-xs-4 col-sm-4 col-4\">");
#nullable restore
#line 748 "D:\GIT.NEWARE.WORK\neware-mes\Sources\XY.Supplier.Web\Views\Purchase\Order_Detail.cshtml"
                                                                               Write(Model.Creator);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"</div>
                </div>
                <div class=""row justify-content-center mb05r"">
                    <div class=""col-xl-1 col-lg-1 col-md-1 col-xs-1 col-sm-1 col-1 gray"">交期类型</div>
                    <div class=""col-xl-4 col-lg-4 col-md-4 col-xs-4 col-sm-4 col-4"">");
#nullable restore
#line 752 "D:\GIT.NEWARE.WORK\neware-mes\Sources\XY.Supplier.Web\Views\Purchase\Order_Detail.cshtml"
                                                                                Write(XY.Enums.boss.Tools.delivery_type(Model.DeliveryType));

#line default
#line hidden
#nullable disable
            WriteLiteral("</div>\r\n                    <div class=\"col-xl-1 col-lg-1 col-md-1 col-xs-1 col-sm-1 col-1 gray\">计划交货时间</div>\r\n                    <div class=\"col-xl-4 col-lg-4 col-md-4 col-xs-4 col-sm-4 col-4\">");
#nullable restore
#line 754 "D:\GIT.NEWARE.WORK\neware-mes\Sources\XY.Supplier.Web\Views\Purchase\Order_Detail.cshtml"
                                                                               Write(Model.DeliveryTime?.ToString("yyyy.MM.dd"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"</div>
                </div>
                <div class=""row justify-content-center mb05r"">
                    <div class=""col-xl-1 col-lg-1 col-md-1 col-xs-1 col-sm-1 col-1 gray"">单价是否含税</div>
                    <div class=""col-xl-4 col-lg-4 col-md-4 col-xs-4 col-sm-4 col-4"">");
#nullable restore
#line 758 "D:\GIT.NEWARE.WORK\neware-mes\Sources\XY.Supplier.Web\Views\Purchase\Order_Detail.cshtml"
                                                                                Write(Model.IsTax ? "是" : "否");

#line default
#line hidden
#nullable disable
            WriteLiteral("</div>\r\n                    <div class=\"col-xl-1 col-lg-1 col-md-1 col-xs-1 col-sm-1 col-1 gray\">审核流程</div>\r\n                    <div class=\"col-xl-4 col-lg-4 col-md-4 col-xs-4 col-sm-4 col-4\">");
#nullable restore
#line 760 "D:\GIT.NEWARE.WORK\neware-mes\Sources\XY.Supplier.Web\Views\Purchase\Order_Detail.cshtml"
                                                                               Write(Model.WfName);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"</div>
                </div>
                <div class=""row justify-content-center mb05r"">
                    <div class=""col-xl-1 col-lg-1 col-md-1 col-xs-1 col-sm-1 col-1 gray"">收货地区</div>
                    <div class=""col-xl-4 col-lg-4 col-md-4 col-xs-4 col-sm-4 col-4"">");
#nullable restore
#line 764 "D:\GIT.NEWARE.WORK\neware-mes\Sources\XY.Supplier.Web\Views\Purchase\Order_Detail.cshtml"
                                                                               Write(Model.ShipZoneCode);

#line default
#line hidden
#nullable disable
            WriteLiteral("</div>\r\n                    <div class=\"col-xl-1 col-lg-1 col-md-1 col-xs-1 col-sm-1 col-1 gray\">收货地址</div>\r\n                    <div class=\"col-xl-4 col-lg-4 col-md-4 col-xs-4 col-sm-4 col-4 oneLine\"");
            BeginWriteAttribute("title", " title=\"", 33974, "\"", 33997, 1);
#nullable restore
#line 766 "D:\GIT.NEWARE.WORK\neware-mes\Sources\XY.Supplier.Web\Views\Purchase\Order_Detail.cshtml"
WriteAttributeValue("", 33982, Model.ShipAddr, 33982, 15, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(">");
#nullable restore
#line 766 "D:\GIT.NEWARE.WORK\neware-mes\Sources\XY.Supplier.Web\Views\Purchase\Order_Detail.cshtml"
                                                                                                               Write(Model.ShipAddr);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"</div>
                </div>
                <div class=""row justify-content-center mb05r"">
                    <div class=""col-xl-1 col-lg-1 col-md-1 col-xs-1 col-sm-1 col-1 gray"">收货人姓名</div>
                    <div class=""col-xl-4 col-lg-4 col-md-4 col-xs-4 col-sm-4 col-4"">");
#nullable restore
#line 770 "D:\GIT.NEWARE.WORK\neware-mes\Sources\XY.Supplier.Web\Views\Purchase\Order_Detail.cshtml"
                                                                               Write(Model.ShipName);

#line default
#line hidden
#nullable disable
            WriteLiteral("</div>\r\n                    <div class=\"col-xl-1 col-lg-1 col-md-1 col-xs-1 col-sm-1 col-1 gray\">收货人电话</div>\r\n                    <div class=\"col-xl-4 col-lg-4 col-md-4 col-xs-4 col-sm-4 col-4\">");
#nullable restore
#line 772 "D:\GIT.NEWARE.WORK\neware-mes\Sources\XY.Supplier.Web\Views\Purchase\Order_Detail.cshtml"
                                                                               Write(Model.ShipPhone);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"</div>
                </div>
                <div class=""row justify-content-center mb1r"">
                    <div class=""col-xl-1 col-lg-1 col-md-1 col-xs-1 col-sm-1 col-1 gray"">备注</div>
                    <div class=""col-xl-9 col-lg-9 col-md-9 col-xs-9 col-sm-9 col-9 oneLine""");
            BeginWriteAttribute("title", " title=\"", 34806, "\"", 34827, 1);
#nullable restore
#line 776 "D:\GIT.NEWARE.WORK\neware-mes\Sources\XY.Supplier.Web\Views\Purchase\Order_Detail.cshtml"
WriteAttributeValue("", 34814, Model.Remark, 34814, 13, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(">");
#nullable restore
#line 776 "D:\GIT.NEWARE.WORK\neware-mes\Sources\XY.Supplier.Web\Views\Purchase\Order_Detail.cshtml"
                                                                                                             Write(Model.Remark);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"</div>
                </div>
            </div>
        </div>
        <div class=""card"" style=""background-color: rgba(236,240,245); border: none;"">
            <div class=""boss_table_top mt10 ml15"">
                <div class=""fl mb10 subtitle"" style=""font-size: .85rem;"">采购订单包含物料</div>
            </div>
            <div class=""boss_table_body table-responsive"">
                <table id=""tableOrderItem"" class=""table table-bordered table-hover"" style=""width: 40rem;"">
                    <thead>
                        <tr>
                            <th class=""w10""><input id=""SelectAll"" type=""checkbox"" /></th>
                            <th class=""w3p"">#</th>
");
            WriteLiteral("                            <th class=\"w14p\">物料编码</th>\r\n                            <th>物料描述</th>\r\n");
            WriteLiteral("                            <th class=\"w5p\">已收料/总数</th>\r\n                            <th class=\"w10p\">规则</th>\r\n                            <th class=\"w10p\">操作</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n");
#nullable restore
#line 800 "D:\GIT.NEWARE.WORK\neware-mes\Sources\XY.Supplier.Web\Views\Purchase\Order_Detail.cshtml"
                         if (Model.OrderItemList != null && Model.OrderItemList.Rows.Count > 0)
                        {
                            var i = 0;
                            foreach (DataRow dr in Model.OrderItemList.Rows)
                            {
                                i++;

#line default
#line hidden
#nullable disable
            WriteLiteral("                                <tr>\r\n                                    <td><input type=\"checkbox\"");
            BeginWriteAttribute("value", " value=\"", 36408, "\"", 36443, 1);
#nullable restore
#line 807 "D:\GIT.NEWARE.WORK\neware-mes\Sources\XY.Supplier.Web\Views\Purchase\Order_Detail.cshtml"
WriteAttributeValue("", 36416, dr["item_id"].ToString(), 36416, 27, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(" /></td>\r\n");
            WriteLiteral("                                    <td>");
#nullable restore
#line 809 "D:\GIT.NEWARE.WORK\neware-mes\Sources\XY.Supplier.Web\Views\Purchase\Order_Detail.cshtml"
                                    Write(i.ToString());

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                                    <td>");
#nullable restore
#line 810 "D:\GIT.NEWARE.WORK\neware-mes\Sources\XY.Supplier.Web\Views\Purchase\Order_Detail.cshtml"
                                   Write(dr["code"]);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                                    <td style=\"max-width: 300px;\"");
            BeginWriteAttribute("title", " title=\"", 36701, "\"", 36720, 1);
#nullable restore
#line 811 "D:\GIT.NEWARE.WORK\neware-mes\Sources\XY.Supplier.Web\Views\Purchase\Order_Detail.cshtml"
WriteAttributeValue("", 36709, dr["summ"], 36709, 11, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(">");
#nullable restore
#line 811 "D:\GIT.NEWARE.WORK\neware-mes\Sources\XY.Supplier.Web\Views\Purchase\Order_Detail.cshtml"
                                                                                 Write(dr["summ"]);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n");
            WriteLiteral("                                    <td class=\"text-right\">");
#nullable restore
#line 813 "D:\GIT.NEWARE.WORK\neware-mes\Sources\XY.Supplier.Web\Views\Purchase\Order_Detail.cshtml"
                                                      Write(dr["receipt_qty"].ToString().TrimEnd('0').TrimEnd('.'));

#line default
#line hidden
#nullable disable
            WriteLiteral("/");
#nullable restore
#line 813 "D:\GIT.NEWARE.WORK\neware-mes\Sources\XY.Supplier.Web\Views\Purchase\Order_Detail.cshtml"
                                                                                                              Write(dr["item_qty"].ToString().TrimEnd('0').TrimEnd('.'));

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                                    <td>");
#nullable restore
#line 814 "D:\GIT.NEWARE.WORK\neware-mes\Sources\XY.Supplier.Web\Views\Purchase\Order_Detail.cshtml"
                                    Write(XY.Enums.boss.Tools.item_rule((XY.Enums.boss.item_rule)dr["rule"]));

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                                    <td class=\"text-left\">\r\n");
            WriteLiteral("                                        <input type=\"button\" value=\"绑定序列号\" data-toggle=\"modal\" class=\"cserialNumber\" data-itemId=\'");
#nullable restore
#line 817 "D:\GIT.NEWARE.WORK\neware-mes\Sources\XY.Supplier.Web\Views\Purchase\Order_Detail.cshtml"
                                                                                                                             Write(dr["item_id"]);

#line default
#line hidden
#nullable disable
            WriteLiteral("\' style=\"background-color: #ffc107;border:none \" />");
            WriteLiteral("\r\n");
            WriteLiteral("                                    </td>\r\n                                </tr>\r\n");
#nullable restore
#line 821 "D:\GIT.NEWARE.WORK\neware-mes\Sources\XY.Supplier.Web\Views\Purchase\Order_Detail.cshtml"
                            }
                        }

#line default
#line hidden
#nullable disable
            WriteLiteral("                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n");
            WriteLiteral("    </div>\r\n");
            WriteLiteral(@"    <!--绑定序列号对话框-->
    <div class=""modal fade"" id=""dialogBindSerialNumber"" tabindex=""-1"" role=""dialog"" aria-labelledby=""dialogTitle"" aria-hidden=""true"" data-backdrop=""static"">
        <div class=""modal-dialog modal-dialog-centered modal-lg"" role=""document"">
            <div class=""modal-content"" style=""width:100%; background-color: #ecf0f5;"">
                <div class=""modal-header"" style=""font-family: 'Arial Negreta', 'Arial Normal', 'Arial';font-size:18px; "">
                    <span class=""modal-title"" id=""dialogTitle"">序列号</span>
                    <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""关闭"">
                        <span aria-hidden=""true"">&times;</span>
                    </button>
                </div>
                <div class=""modal-body fz0875r"">
                    <div style=""overflow: hidden"">
                        <table id=""tbSerialNumber""></table>
                    </div>

                    <div style=""margin-top:20px"">
                 ");
            WriteLiteral(@"       <div class=""w100p mb5"">
                            <input type=""file"" id=""uploadFile"" name=""File"" class=""form-control form-control-sm w90p""
                                   accept=""application/vnd.openxmlformats-officedocument.spreadsheetml.sheet,application/vnd.ms-excel""
                                   xy-required=""true"" xy-title=""请选择文件！"" />
                        </div>
                        <div class=""w100p lh180p lightgray"">
                            <div>仅支持Execl文件，将序列号放在第一列中</div>
                            <span>如果导入文件较大需要花费稍长时间，请耐心等待。</span><br />
                            <a href=""/resource/序列号.xlsx"" download>序列号文件模板示例</a>
                        </div>
                    </div>
                </div>

                <div class=""modal-footer"" style=""background-color: #ecf0f5;margin:auto;"">
                    <button type=""button"" id=""btnSubmit"" class=""btn btn-warning btn-sm w100"">确定</button>
");
            WriteLiteral("                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n");
#nullable restore
#line 915 "D:\GIT.NEWARE.WORK\neware-mes\Sources\XY.Supplier.Web\Views\Purchase\Order_Detail.cshtml"
}

#line default
#line hidden
#nullable disable
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<XY.Supplier.Web.Models.Purchase.PurchaseOrder_View_Model> Html { get; private set; }
    }
}
#pragma warning restore 1591
